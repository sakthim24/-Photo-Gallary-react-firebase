{"version":3,"sources":["API/firebase.js","Images.js","Navbar.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","Imags","images","setImages","allImages","setAllImages","Container","fluid","className","length","map","img","index","Card","style","width","Body","Img","src","data","url","alt","name","Footer","Title","Button","variant","type","marginLeft","onClick","docId","id","swal","title","text","icon","buttons","dangerMode","then","willDelete","refFromURL","delete","collection","doc","filter","image","prevImages","catch","err","console","log","faTrash","NavbarComponent","useState","showModal","setShowModal","setImg","progress","setProgress","Modal","show","onHide","Header","bg","faTimes","ProgressBar","now","Form","onSubmit","e","preventDefault","uploadRef","ref","put","on","snapshot","newProgress","Math","round","bytesTransferred","totalBytes","error","message","a","getDownloadURL","add","get","newDoc","Group","controlId","accept","onChange","target","files","Navbar","sticky","NavbarBrand","as","NavLink","href","size","marginRight","Searchbar","searchRef","React","useRef","setText","useEffect","toLowerCase","includes","trim","current","focus","Row","Col","InputGroup","Control","boxShadow","placeholder","value","App","forEach","prevAllImages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7f72fc5.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB2jvsrjSR9BzOARLRSQ0NPox_R3iPBTII\",\r\n  authDomain: \"photo-gallary-b0d97.firebaseapp.com\",\r\n  projectId: \"photo-gallary-b0d97\",\r\n  storageBucket: \"photo-gallary-b0d97.appspot.com\",\r\n  messagingSenderId: \"874020015562\",\r\n  appId: \"1:874020015562:web:8593827d601e0da0589333\",\r\n  measurementId: \"G-YDVZ4HYGGY\"\r\n};\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n export const firestore= firebase.firestore();\r\n export const storage=firebase.storage();","import { faTrash, faWindowRestore } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Button, Card, Container } from \"react-bootstrap\";\r\nimport { firestore, storage } from \"./API/firebase\";\r\nimport swal from 'sweetalert';\r\nimport './index.css'\r\n\r\n\r\nconst Imags = ({ images, setImages, allImages, setAllImages }) => {\r\n\r\n  const deleteImage = (docId, url) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this image!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n\r\n        if (willDelete) {\r\n          storage.refFromURL(url).delete().then(() => {\r\n            firestore.collection(\"images\").doc(docId).delete().then(() => {\r\n              setAllImages(allImages.filter((image) => image.data.url !== url));\r\n              setImages(prevImages => prevImages.filter(img => img.id !== docId));\r\n\r\n            }).catch(err => console.log(err));\r\n\r\n          }).catch(err => console.log(err));\r\n          swal(\"Poof! Your image has been deleted!\", {\r\n            icon: \"success\",\r\n          });\r\n        } else {\r\n          swal(\"Your image is safe!\");\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <div className=\"container\">\r\n\r\n          {images.length < 1 ? (\r\n            <h1 className=\"text-center my-5\">No Images Found</h1>\r\n          ) : (\r\n            images.map((img, index) => (\r\n              <Card className=\"mb-2 mx-auto col-md-3\" key={index} style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                  <Card.Img src={img.data.url} alt={img.data.name} />\r\n                </Card.Body>\r\n                <Card.Footer className=\"navbar-custom\">\r\n                  <Card.Title  >{img.data.name} <Button variant=\"white\"\r\n                    type=\"button\" style={{ marginLeft: \"auto\" }} onClick={() => deleteImage(img.id, img.data.url)} >\r\n                    <FontAwesomeIcon icon={faTrash} /></Button></Card.Title>\r\n\r\n                </Card.Footer>\r\n              </Card>\r\n            ))\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Imags;","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport swal from 'sweetalert';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavLink,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\nimport \"./index.css\"\r\nimport { firestore, storage } from \"./API/firebase\";\r\n\r\nconst NavbarComponent = ({ setImages, images, setAllImages}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [img, setImg] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   \r\n    if (!img) return swal(\"Error\", \"Please Insert an Image!\", \"error\");\r\n    \r\n    const filterImages = images.filter(image => image.data.name === img.name);\r\n    if (filterImages.length > 0){\r\n      setImg(\"\");\r\n    \r\n    return swal(\"Error\", `The image ${img.name} is already present`, \"error\");\r\n    \r\n    }\r\n    if(img){\r\n    const uploadRef = storage.ref(`images/${img.name}`);\r\n    uploadRef.put(img).on(\r\n      \"state_change\",\r\n      (snapshot) => {  const newProgress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(newProgress);\r\n        \r\n      },\r\n    \r\n      (error) => {\r\n        return swal(\"Error\",error.message, \"error\");\r\n      },\r\n      async () => {\r\n        const url = await uploadRef.getDownloadURL();\r\n\r\n        firestore .collection(\"images\").add({\r\n          name:img.name,\r\n          url:url,\r\n        }).then(async (doc) => {\r\n          const newDoc = await doc.get();   \r\n          setImages(prevImages=> [...prevImages,{data:newDoc.data(), id: newDoc.id} ])\r\n          setAllImages(prevImages=> [...prevImages,{data:newDoc.data(), id: newDoc.id} ])\r\n            swal(\"Good job!\", \"Image added successfully!\", \"success\");\r\n          setProgress(0);\r\n         setImg(\"\");\r\n         setShowModal(false);\r\n        }).catch(err=>{\r\n          console.log(err)\r\n         \r\n        });\r\n      })\r\n    }\r\n    };\r\n  return (\r\n    <>\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n          {progress ? \"Uploading...\" : \"Upload Image\"}\r\n          </Modal.Title>\r\n        \r\n            <Button\r\n              type=\"button\"\r\n              variant=\"white\"\r\n              bg=\"white\"\r\n              onClick={() => setShowModal(false)}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n          \r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {progress ? (\r\n            <ProgressBar variant={\"primary\"} now={progress} />\r\n          ) : (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formBasicFile\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control\"\r\n                  accept=\"image/png, image/jpg, image/jpeg\"\r\n                  onChange={(e) => setImg(e.target.files[0])}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicSubmit\" className=\"my-2\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"dark\"\r\n                  className=\"form-control btn-block navbar-custom\"\r\n                >\r\n                  Upload image\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Navbar sticky=\"top\" variant=\"dark\" className=\"navbar-custom\" >\r\n        <NavbarBrand as={NavLink} className=\"font\" href={\"/\"} style={{ marginLeft: \"50px\"}}>\r\n          Photo Gallary\r\n        </NavbarBrand>\r\n        <Button\r\n          variant=\"outline-light\" \r\n          size=\"sm\"\r\n          style={{ marginLeft: \"auto\", marginRight: \"50px\" }}\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          Upload\r\n        </Button>\r\n      </Navbar>\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavbarComponent;","import React, { useState, useEffect } from \"react\";\r\nimport { Container ,Row,Col, Form, InputGroup} from \"react-bootstrap\";\r\nimport \"./index.css\"\r\n\r\nfunction Searchbar({setImages, allImages}) {\r\n  const searchRef =React.useRef(null);\r\n  const [text, setText] = useState(\"\");\r\n  useEffect(() => {\r\n    setImages(\r\n      allImages.filter((image) => image.data.name.toLowerCase().includes(text.trim())));\r\n      searchRef.current.focus();\r\n  })\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n    \r\n    <Container >\r\n    &sakthi\r\n    <Row  className=\"justify-content-md-center\">\r\n    <Col   className=\"mx-auto my-5 md-12 text-center xs-6\">\r\n    <Form.Group controlId=\"formBasic\">\r\n    <InputGroup>\r\n    <Form.Control\r\n                className=\" border-0 border-bottom outline-0\"\r\n                style={{ boxShadow: \"none\" }}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                ref={searchRef}\r\n                onChange={(e) =>  setText(e.target.value)}\r\n              />\r\n               </InputGroup>\r\n    </Form.Group>\r\n     </Col>\r\n    </Row>\r\n   \r\n  </Container>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n\r\n","import React, { useEffect, useState } from \"react\";\nimport { firestore } from \"./API/firebase\";\nimport Imags from \"./Images\";\nimport NavbarComponent from \"./Navbar\";\nimport Searchbar from \"./SearchBar\";\n\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [allImages, setAllImages] = useState([]);\n \n  useEffect(() => {\n    firestore\n      .collection(\"images\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc) => {\n          setImages(prevImages => [...prevImages, {data: doc.data(),id:doc.id}]);\n          setAllImages(prevAllImages => [...prevAllImages, {data: doc.data(),id:doc.id}]);\n        })\n      })  \n  }, []);\n  return (\n    <div className=\"App\">\n     \n      <NavbarComponent  setImages={setImages} setAllImages={setAllImages} images={images} />\n      \n     <Searchbar setImages={setImages} allImages={allImages}/>\n   <Imags images={images}  setImages={setImages}   allImages={allImages}\n        setAllImages={setAllImages} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}